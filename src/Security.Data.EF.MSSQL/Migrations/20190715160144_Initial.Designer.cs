// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Security.Data.EF.Migrations
{
    [DbContext(typeof(SSODbContext))]
    [Migration("20190715160144_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Objects.Entities.Audit.AuditDataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuditEntryId");

                    b.Property<string>("NewValue");

                    b.Property<string>("PreviousValue");

                    b.Property<string>("PropertyName");

                    b.HasKey("Id");

                    b.HasIndex("AuditEntryId");

                    b.ToTable("AuditDataItems","Audit");
                });

            modelBuilder.Entity("Core.Objects.Entities.Audit.AuditEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Detail");

                    b.Property<string>("EntityId");

                    b.Property<string>("EntityType")
                        .IsRequired();

                    b.Property<string>("Event");

                    b.Property<Guid>("EventId");

                    b.Property<DateTimeOffset>("TimeOfEvent");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AuditEntries","Audit");
                });

            modelBuilder.Entity("Core.Objects.Entities.Logging.LogDataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LogEntryId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LogEntryId");

                    b.ToTable("LogDataItems","Logging");
                });

            modelBuilder.Entity("Core.Objects.Entities.Logging.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppName")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<int>("Level");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("TypeName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("LogEntries","Logging");
                });

            modelBuilder.Entity("Core.Security.Objects.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTime?>("LockoutEndDateUtc");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Objects.Entities.Audit.AuditDataItem", b =>
                {
                    b.HasOne("Core.Objects.Entities.Audit.AuditEntry", "AuditEntry")
                        .WithMany("Changes")
                        .HasForeignKey("AuditEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Core.Objects.Entities.Logging.LogDataItem", b =>
                {
                    b.HasOne("Core.Objects.Entities.Logging.LogEntry", "LogEntry")
                        .WithMany("Data")
                        .HasForeignKey("LogEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
